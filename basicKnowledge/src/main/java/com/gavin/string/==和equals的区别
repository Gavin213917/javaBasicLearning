 	
	
	
	
	
		Java程序中测两个变量是否相等了两种方式分别是:==和equals方法
		1:如果利用==判断两个变量是否相同时，如果两个变量是基础类型变量，而且都是数值类型（可以数据类型不同）。只要两个变量值相等，返回都是true
		2:但是如果两个引用类型，只有他们指向同一个对象时，==判断才会返回true,==不可以比较没有父子关系的两个对象。


		//equals
		1:Jvm常量池保证相同的字符串直接量只有一个，不会产生过个副本，有些字符串在赋予值以后在编译阶段就确定下来，
		  因为他们都将引用同一个字符串对象
		 2:而使用new String()创建的字符串对象是运行时创建出来的，它被保存在运行时内存区，不会放在常量池中。
		  在很多时候，程序都是判断两个对象的值相等，这个时候如果仅仅用==就达不到我们想要的结果。所有程序可以利用eqauls方法
		 来实现两个对象的值相等，

		 eqauls方法是Object提供的一个实例方法，因为所有的引用变量都可以调用该方法来判断是否与其他变量相等，
		 但是使用equals方法判断两个对象相等的标准与==运算符没有区别。同样的要求两个引用变量指向同一个对象
		 才会返回true，
		 很多书上说equals方法是判断两个对象的值相等，这个说法是不准确的，对象的值如何相等，实际上，重写eqauls方法就是
		 提供自定义的相等标准，都是由程序开发者自己去决定，一切由程序开发者自己做主，你可以让Person和Fruit相等也是可以的.


		 Object默认提供的equals方法只是比较对象的地址。




		final修饰的类：
		 它不可以有子类，也就不能被继承,如果在开发过程中，你不想有有任何的类来重写父类的方法或者派生出子类，可以使用final修饰类。


		关于不可变类：
		不可变类(immutable)的意思是创建该类的实例后，该实例的变量不可变，Java提供了八个包装类和String都是不可变类。
		1:使用private和final修饰符来修改该类的成员变量.
		2:提供带参数构造函数，用于根据传入的参数来初始化类的成员变量。因为普通方法无法修改final修饰的成员变量
		3：仅为该类的成员变量提供getter方法，不提供setter方法 ,因为普通方法无法修改final修改的成员变量。
		4:如果有必要重写Object类的hashCode和equals方法，来解决两个对象是否相等的情况。
		
		
		
		 
		  